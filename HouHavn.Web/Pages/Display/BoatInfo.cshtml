@page "{boatId}"
@model HouHavn.Web.Pages.Display.BoatInfoModel
@{
    ViewData["Title"] = "BoatInfo";
}


@if (Model.Boat != null)
{
    <h1>Info om plads nr. @Html.DisplayFor(model => model.Boat.BerthNavigation.BerthId)</h1>
    <dl>
        <dt>
            @Html.DisplayNameFor(model => model.Boat.Name)
        </dt>
        <dd>
            <a asp-page="../Lists/Boats/Details" asp-route-id="@Model.Boat.BoatId">@Html.DisplayFor(model => model.Boat.Name)</a>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Boat.Type)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Boat.Type)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Boat.Length)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Boat.Length) meter
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Boat.Width)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Boat.Width) meter
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Boat.Dept)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Boat.Dept) meter
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Boat.Notes)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Boat.Notes)
        </dd>


        <br />
        <dt>
            @Html.DisplayNameFor(model => model.Boat.PersonNavigation.FullName)
        </dt>
        <dd>
            <a asp-page="../Lists/People/Details" asp-route-id="@Model.Boat.PersonNavigation.PersonId">@Html.DisplayFor(model => model.Boat.PersonNavigation.FullName)</a>
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Boat.PersonNavigation.Address)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Boat.PersonNavigation.Address)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Boat.PersonNavigation.PostalCode)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Boat.PersonNavigation.PostalCode)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Boat.PersonNavigation.City)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Boat.PersonNavigation.City)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Boat.PersonNavigation.Country)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Boat.PersonNavigation.Country)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Boat.PersonNavigation.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Boat.PersonNavigation.Email)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Boat.PersonNavigation.PhoneNumber)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Boat.PersonNavigation.PhoneNumber)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Boat.PersonNavigation.Notes)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Boat.PersonNavigation.Notes)
        </dd>
        <br />
        <dt>
            Kunde af havn:
        </dt>
        <dd>
            @(@Model.Boat.PersonNavigation.Member == 1 ? "Ja" : "Nej")
        </dd>
        <dt>
            Medlem af bådlaug:
        </dt>
        <dd>
            @(@Model.Boat.PersonNavigation.BoatGuild == 1 ? "Ja" : "Nej")
        </dd>
        <dt>
            Medlem af Jollelaug:
        </dt>
        <dd>
            @(@Model.Boat.PersonNavigation.DingyGuild == 1 ? "Ja" : "Nej")
        </dd>
    </dl>
    <a href='javascript:history.go(-1)'>Tilbage</a>
}
else
{
    <h1>Båden blev ikke fundet</h1>
}